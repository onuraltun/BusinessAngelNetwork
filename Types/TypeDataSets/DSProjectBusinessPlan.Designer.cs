//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4005
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Types.TypeDataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSProjectBusinessPlan")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSProjectBusinessPlan : global::System.Data.DataSet {
        
        private PROJECT_BUSINESS_PLANDataTable tablePROJECT_BUSINESS_PLAN;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSProjectBusinessPlan() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSProjectBusinessPlan(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PROJECT_BUSINESS_PLAN"] != null)) {
                    base.Tables.Add(new PROJECT_BUSINESS_PLANDataTable(ds.Tables["PROJECT_BUSINESS_PLAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PROJECT_BUSINESS_PLANDataTable PROJECT_BUSINESS_PLAN {
            get {
                return this.tablePROJECT_BUSINESS_PLAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSProjectBusinessPlan cln = ((DSProjectBusinessPlan)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PROJECT_BUSINESS_PLAN"] != null)) {
                    base.Tables.Add(new PROJECT_BUSINESS_PLANDataTable(ds.Tables["PROJECT_BUSINESS_PLAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePROJECT_BUSINESS_PLAN = ((PROJECT_BUSINESS_PLANDataTable)(base.Tables["PROJECT_BUSINESS_PLAN"]));
            if ((initTable == true)) {
                if ((this.tablePROJECT_BUSINESS_PLAN != null)) {
                    this.tablePROJECT_BUSINESS_PLAN.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSProjectBusinessPlan";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSProjectBusinessPlan.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePROJECT_BUSINESS_PLAN = new PROJECT_BUSINESS_PLANDataTable();
            base.Tables.Add(this.tablePROJECT_BUSINESS_PLAN);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePROJECT_BUSINESS_PLAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSProjectBusinessPlan ds = new DSProjectBusinessPlan();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PROJECT_BUSINESS_PLANRowChangeEventHandler(object sender, PROJECT_BUSINESS_PLANRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PROJECT_BUSINESS_PLANDataTable : global::System.Data.TypedTableBase<PROJECT_BUSINESS_PLANRow> {
            
            private global::System.Data.DataColumn columnRECID;
            
            private global::System.Data.DataColumn columnPROJECTID;
            
            private global::System.Data.DataColumn columnA1a;
            
            private global::System.Data.DataColumn columnA1b;
            
            private global::System.Data.DataColumn columnA1c;
            
            private global::System.Data.DataColumn columnA1d;
            
            private global::System.Data.DataColumn columnA2a;
            
            private global::System.Data.DataColumn columnA2b;
            
            private global::System.Data.DataColumn columnA2c;
            
            private global::System.Data.DataColumn columnB1;
            
            private global::System.Data.DataColumn columnB2;
            
            private global::System.Data.DataColumn columnB3;
            
            private global::System.Data.DataColumn columnB4a;
            
            private global::System.Data.DataColumn columnB4b;
            
            private global::System.Data.DataColumn columnB4c;
            
            private global::System.Data.DataColumn columnB5;
            
            private global::System.Data.DataColumn columnB6;
            
            private global::System.Data.DataColumn columnC1;
            
            private global::System.Data.DataColumn columnC2;
            
            private global::System.Data.DataColumn columnC3;
            
            private global::System.Data.DataColumn columnD1;
            
            private global::System.Data.DataColumn columnD2;
            
            private global::System.Data.DataColumn columnE1;
            
            private global::System.Data.DataColumn columnE2;
            
            private global::System.Data.DataColumn columnE3;
            
            private global::System.Data.DataColumn columnE4;
            
            private global::System.Data.DataColumn columnE5;
            
            private global::System.Data.DataColumn columnF1;
            
            private global::System.Data.DataColumn columnF2;
            
            private global::System.Data.DataColumn columnG1;
            
            private global::System.Data.DataColumn columnH1;
            
            private global::System.Data.DataColumn columnH2;
            
            private global::System.Data.DataColumn columnI1;
            
            private global::System.Data.DataColumn columnI2;
            
            private global::System.Data.DataColumn columnI3;
            
            private global::System.Data.DataColumn columnI4;
            
            private global::System.Data.DataColumn columnI5;
            
            private global::System.Data.DataColumn columnJ1;
            
            private global::System.Data.DataColumn columnJ2;
            
            private global::System.Data.DataColumn columnK1;
            
            private global::System.Data.DataColumn columnL1;
            
            private global::System.Data.DataColumn columnM1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJECT_BUSINESS_PLANDataTable() {
                this.TableName = "PROJECT_BUSINESS_PLAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROJECT_BUSINESS_PLANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PROJECT_BUSINESS_PLANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECIDColumn {
                get {
                    return this.columnRECID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECTIDColumn {
                get {
                    return this.columnPROJECTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn A1aColumn {
                get {
                    return this.columnA1a;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn A1bColumn {
                get {
                    return this.columnA1b;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn A1cColumn {
                get {
                    return this.columnA1c;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn A1dColumn {
                get {
                    return this.columnA1d;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn A2aColumn {
                get {
                    return this.columnA2a;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn A2bColumn {
                get {
                    return this.columnA2b;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn A2cColumn {
                get {
                    return this.columnA2c;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B1Column {
                get {
                    return this.columnB1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B2Column {
                get {
                    return this.columnB2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B3Column {
                get {
                    return this.columnB3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B4aColumn {
                get {
                    return this.columnB4a;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B4bColumn {
                get {
                    return this.columnB4b;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B4cColumn {
                get {
                    return this.columnB4c;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B5Column {
                get {
                    return this.columnB5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B6Column {
                get {
                    return this.columnB6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C1Column {
                get {
                    return this.columnC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C2Column {
                get {
                    return this.columnC2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C3Column {
                get {
                    return this.columnC3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D1Column {
                get {
                    return this.columnD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D2Column {
                get {
                    return this.columnD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E1Column {
                get {
                    return this.columnE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E2Column {
                get {
                    return this.columnE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E3Column {
                get {
                    return this.columnE3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E4Column {
                get {
                    return this.columnE4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E5Column {
                get {
                    return this.columnE5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F1Column {
                get {
                    return this.columnF1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F2Column {
                get {
                    return this.columnF2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn G1Column {
                get {
                    return this.columnG1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H1Column {
                get {
                    return this.columnH1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H2Column {
                get {
                    return this.columnH2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn I1Column {
                get {
                    return this.columnI1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn I2Column {
                get {
                    return this.columnI2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn I3Column {
                get {
                    return this.columnI3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn I4Column {
                get {
                    return this.columnI4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn I5Column {
                get {
                    return this.columnI5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn J1Column {
                get {
                    return this.columnJ1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn J2Column {
                get {
                    return this.columnJ2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn K1Column {
                get {
                    return this.columnK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L1Column {
                get {
                    return this.columnL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1Column {
                get {
                    return this.columnM1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJECT_BUSINESS_PLANRow this[int index] {
                get {
                    return ((PROJECT_BUSINESS_PLANRow)(this.Rows[index]));
                }
            }
            
            public event PROJECT_BUSINESS_PLANRowChangeEventHandler PROJECT_BUSINESS_PLANRowChanging;
            
            public event PROJECT_BUSINESS_PLANRowChangeEventHandler PROJECT_BUSINESS_PLANRowChanged;
            
            public event PROJECT_BUSINESS_PLANRowChangeEventHandler PROJECT_BUSINESS_PLANRowDeleting;
            
            public event PROJECT_BUSINESS_PLANRowChangeEventHandler PROJECT_BUSINESS_PLANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPROJECT_BUSINESS_PLANRow(PROJECT_BUSINESS_PLANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJECT_BUSINESS_PLANRow AddPROJECT_BUSINESS_PLANRow(
                        int PROJECTID, 
                        string A1a, 
                        string A1b, 
                        string A1c, 
                        string A1d, 
                        string A2a, 
                        string A2b, 
                        string A2c, 
                        string B1, 
                        string B2, 
                        string B3, 
                        string B4a, 
                        string B4b, 
                        string B4c, 
                        string B5, 
                        string B6, 
                        string C1, 
                        string C2, 
                        string C3, 
                        string D1, 
                        string D2, 
                        string E1, 
                        string E2, 
                        string E3, 
                        string E4, 
                        string E5, 
                        string F1, 
                        string F2, 
                        string G1, 
                        string H1, 
                        string H2, 
                        string I1, 
                        string I2, 
                        string I3, 
                        string I4, 
                        string I5, 
                        string J1, 
                        string J2, 
                        string K1, 
                        string L1, 
                        string M1) {
                PROJECT_BUSINESS_PLANRow rowPROJECT_BUSINESS_PLANRow = ((PROJECT_BUSINESS_PLANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PROJECTID,
                        A1a,
                        A1b,
                        A1c,
                        A1d,
                        A2a,
                        A2b,
                        A2c,
                        B1,
                        B2,
                        B3,
                        B4a,
                        B4b,
                        B4c,
                        B5,
                        B6,
                        C1,
                        C2,
                        C3,
                        D1,
                        D2,
                        E1,
                        E2,
                        E3,
                        E4,
                        E5,
                        F1,
                        F2,
                        G1,
                        H1,
                        H2,
                        I1,
                        I2,
                        I3,
                        I4,
                        I5,
                        J1,
                        J2,
                        K1,
                        L1,
                        M1};
                rowPROJECT_BUSINESS_PLANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPROJECT_BUSINESS_PLANRow);
                return rowPROJECT_BUSINESS_PLANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJECT_BUSINESS_PLANRow FindByRECID(int RECID) {
                return ((PROJECT_BUSINESS_PLANRow)(this.Rows.Find(new object[] {
                            RECID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PROJECT_BUSINESS_PLANDataTable cln = ((PROJECT_BUSINESS_PLANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PROJECT_BUSINESS_PLANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRECID = base.Columns["RECID"];
                this.columnPROJECTID = base.Columns["PROJECTID"];
                this.columnA1a = base.Columns["A1a"];
                this.columnA1b = base.Columns["A1b"];
                this.columnA1c = base.Columns["A1c"];
                this.columnA1d = base.Columns["A1d"];
                this.columnA2a = base.Columns["A2a"];
                this.columnA2b = base.Columns["A2b"];
                this.columnA2c = base.Columns["A2c"];
                this.columnB1 = base.Columns["B1"];
                this.columnB2 = base.Columns["B2"];
                this.columnB3 = base.Columns["B3"];
                this.columnB4a = base.Columns["B4a"];
                this.columnB4b = base.Columns["B4b"];
                this.columnB4c = base.Columns["B4c"];
                this.columnB5 = base.Columns["B5"];
                this.columnB6 = base.Columns["B6"];
                this.columnC1 = base.Columns["C1"];
                this.columnC2 = base.Columns["C2"];
                this.columnC3 = base.Columns["C3"];
                this.columnD1 = base.Columns["D1"];
                this.columnD2 = base.Columns["D2"];
                this.columnE1 = base.Columns["E1"];
                this.columnE2 = base.Columns["E2"];
                this.columnE3 = base.Columns["E3"];
                this.columnE4 = base.Columns["E4"];
                this.columnE5 = base.Columns["E5"];
                this.columnF1 = base.Columns["F1"];
                this.columnF2 = base.Columns["F2"];
                this.columnG1 = base.Columns["G1"];
                this.columnH1 = base.Columns["H1"];
                this.columnH2 = base.Columns["H2"];
                this.columnI1 = base.Columns["I1"];
                this.columnI2 = base.Columns["I2"];
                this.columnI3 = base.Columns["I3"];
                this.columnI4 = base.Columns["I4"];
                this.columnI5 = base.Columns["I5"];
                this.columnJ1 = base.Columns["J1"];
                this.columnJ2 = base.Columns["J2"];
                this.columnK1 = base.Columns["K1"];
                this.columnL1 = base.Columns["L1"];
                this.columnM1 = base.Columns["M1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRECID = new global::System.Data.DataColumn("RECID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECID);
                this.columnPROJECTID = new global::System.Data.DataColumn("PROJECTID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECTID);
                this.columnA1a = new global::System.Data.DataColumn("A1a", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1a);
                this.columnA1b = new global::System.Data.DataColumn("A1b", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1b);
                this.columnA1c = new global::System.Data.DataColumn("A1c", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1c);
                this.columnA1d = new global::System.Data.DataColumn("A1d", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1d);
                this.columnA2a = new global::System.Data.DataColumn("A2a", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA2a);
                this.columnA2b = new global::System.Data.DataColumn("A2b", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA2b);
                this.columnA2c = new global::System.Data.DataColumn("A2c", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA2c);
                this.columnB1 = new global::System.Data.DataColumn("B1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB1);
                this.columnB2 = new global::System.Data.DataColumn("B2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB2);
                this.columnB3 = new global::System.Data.DataColumn("B3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB3);
                this.columnB4a = new global::System.Data.DataColumn("B4a", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB4a);
                this.columnB4b = new global::System.Data.DataColumn("B4b", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB4b);
                this.columnB4c = new global::System.Data.DataColumn("B4c", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB4c);
                this.columnB5 = new global::System.Data.DataColumn("B5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB5);
                this.columnB6 = new global::System.Data.DataColumn("B6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB6);
                this.columnC1 = new global::System.Data.DataColumn("C1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1);
                this.columnC2 = new global::System.Data.DataColumn("C2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2);
                this.columnC3 = new global::System.Data.DataColumn("C3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC3);
                this.columnD1 = new global::System.Data.DataColumn("D1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD1);
                this.columnD2 = new global::System.Data.DataColumn("D2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD2);
                this.columnE1 = new global::System.Data.DataColumn("E1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE1);
                this.columnE2 = new global::System.Data.DataColumn("E2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE2);
                this.columnE3 = new global::System.Data.DataColumn("E3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE3);
                this.columnE4 = new global::System.Data.DataColumn("E4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE4);
                this.columnE5 = new global::System.Data.DataColumn("E5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE5);
                this.columnF1 = new global::System.Data.DataColumn("F1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1);
                this.columnF2 = new global::System.Data.DataColumn("F2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF2);
                this.columnG1 = new global::System.Data.DataColumn("G1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG1);
                this.columnH1 = new global::System.Data.DataColumn("H1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH1);
                this.columnH2 = new global::System.Data.DataColumn("H2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH2);
                this.columnI1 = new global::System.Data.DataColumn("I1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnI1);
                this.columnI2 = new global::System.Data.DataColumn("I2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnI2);
                this.columnI3 = new global::System.Data.DataColumn("I3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnI3);
                this.columnI4 = new global::System.Data.DataColumn("I4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnI4);
                this.columnI5 = new global::System.Data.DataColumn("I5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnI5);
                this.columnJ1 = new global::System.Data.DataColumn("J1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJ1);
                this.columnJ2 = new global::System.Data.DataColumn("J2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJ2);
                this.columnK1 = new global::System.Data.DataColumn("K1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnK1);
                this.columnL1 = new global::System.Data.DataColumn("L1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL1);
                this.columnM1 = new global::System.Data.DataColumn("M1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRECID}, true));
                this.columnRECID.AutoIncrement = true;
                this.columnRECID.AutoIncrementSeed = -1;
                this.columnRECID.AutoIncrementStep = -1;
                this.columnRECID.AllowDBNull = false;
                this.columnRECID.ReadOnly = true;
                this.columnRECID.Unique = true;
                this.columnPROJECTID.AllowDBNull = false;
                this.columnA1a.MaxLength = 1073741823;
                this.columnA1b.MaxLength = 1073741823;
                this.columnA1c.MaxLength = 1073741823;
                this.columnA1d.MaxLength = 1073741823;
                this.columnA2a.MaxLength = 1073741823;
                this.columnA2b.MaxLength = 1073741823;
                this.columnA2c.MaxLength = 1073741823;
                this.columnB1.MaxLength = 1073741823;
                this.columnB2.MaxLength = 1073741823;
                this.columnB3.MaxLength = 1073741823;
                this.columnB4a.MaxLength = 1073741823;
                this.columnB4b.MaxLength = 1073741823;
                this.columnB4c.MaxLength = 1073741823;
                this.columnB5.MaxLength = 1073741823;
                this.columnB6.MaxLength = 1073741823;
                this.columnC1.MaxLength = 1073741823;
                this.columnC2.MaxLength = 1073741823;
                this.columnC3.MaxLength = 1073741823;
                this.columnD1.MaxLength = 1073741823;
                this.columnD2.MaxLength = 1073741823;
                this.columnE1.MaxLength = 1073741823;
                this.columnE2.MaxLength = 1073741823;
                this.columnE3.MaxLength = 1073741823;
                this.columnE4.MaxLength = 1073741823;
                this.columnE5.MaxLength = 1073741823;
                this.columnF1.MaxLength = 1073741823;
                this.columnF2.MaxLength = 1073741823;
                this.columnG1.MaxLength = 1073741823;
                this.columnH1.MaxLength = 1073741823;
                this.columnH2.MaxLength = 1073741823;
                this.columnI1.MaxLength = 1073741823;
                this.columnI2.MaxLength = 1073741823;
                this.columnI3.MaxLength = 1073741823;
                this.columnI4.MaxLength = 1073741823;
                this.columnI5.MaxLength = 1073741823;
                this.columnJ1.MaxLength = 1073741823;
                this.columnJ2.MaxLength = 1073741823;
                this.columnK1.MaxLength = 1073741823;
                this.columnL1.MaxLength = 1073741823;
                this.columnM1.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJECT_BUSINESS_PLANRow NewPROJECT_BUSINESS_PLANRow() {
                return ((PROJECT_BUSINESS_PLANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PROJECT_BUSINESS_PLANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PROJECT_BUSINESS_PLANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PROJECT_BUSINESS_PLANRowChanged != null)) {
                    this.PROJECT_BUSINESS_PLANRowChanged(this, new PROJECT_BUSINESS_PLANRowChangeEvent(((PROJECT_BUSINESS_PLANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PROJECT_BUSINESS_PLANRowChanging != null)) {
                    this.PROJECT_BUSINESS_PLANRowChanging(this, new PROJECT_BUSINESS_PLANRowChangeEvent(((PROJECT_BUSINESS_PLANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PROJECT_BUSINESS_PLANRowDeleted != null)) {
                    this.PROJECT_BUSINESS_PLANRowDeleted(this, new PROJECT_BUSINESS_PLANRowChangeEvent(((PROJECT_BUSINESS_PLANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PROJECT_BUSINESS_PLANRowDeleting != null)) {
                    this.PROJECT_BUSINESS_PLANRowDeleting(this, new PROJECT_BUSINESS_PLANRowChangeEvent(((PROJECT_BUSINESS_PLANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePROJECT_BUSINESS_PLANRow(PROJECT_BUSINESS_PLANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSProjectBusinessPlan ds = new DSProjectBusinessPlan();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PROJECT_BUSINESS_PLANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PROJECT_BUSINESS_PLANRow : global::System.Data.DataRow {
            
            private PROJECT_BUSINESS_PLANDataTable tablePROJECT_BUSINESS_PLAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROJECT_BUSINESS_PLANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePROJECT_BUSINESS_PLAN = ((PROJECT_BUSINESS_PLANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RECID {
                get {
                    return ((int)(this[this.tablePROJECT_BUSINESS_PLAN.RECIDColumn]));
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.RECIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PROJECTID {
                get {
                    return ((int)(this[this.tablePROJECT_BUSINESS_PLAN.PROJECTIDColumn]));
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.PROJECTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string A1a {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.A1aColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A1a\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.A1aColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string A1b {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.A1bColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A1b\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.A1bColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string A1c {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.A1cColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A1c\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.A1cColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string A1d {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.A1dColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A1d\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.A1dColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string A2a {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.A2aColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A2a\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.A2aColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string A2b {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.A2bColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A2b\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.A2bColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string A2c {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.A2cColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A2c\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.A2cColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.B1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.B1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B2 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.B2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B2\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.B2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B3 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.B3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B3\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.B3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B4a {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.B4aColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B4a\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.B4aColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B4b {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.B4bColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B4b\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.B4bColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B4c {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.B4cColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B4c\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.B4cColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B5 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.B5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B5\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.B5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B6 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.B6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B6\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.B6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.C1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.C1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C2 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.C2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.C2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C3 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.C3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C3\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.C3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string D1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.D1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.D1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string D2 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.D2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D2\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.D2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.E1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.E1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E2 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.E2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E2\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.E2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E3 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.E3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E3\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.E3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E4 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.E4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E4\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.E4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E5 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.E5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E5\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.E5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.F1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.F1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F2 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.F2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F2\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.F2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string G1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.G1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'G1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.G1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string H1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.H1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.H1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string H2 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.H2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H2\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.H2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string I1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.I1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'I1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.I1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string I2 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.I2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'I2\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.I2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string I3 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.I3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'I3\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.I3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string I4 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.I4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'I4\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.I4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string I5 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.I5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'I5\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.I5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string J1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.J1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'J1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.J1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string J2 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.J2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'J2\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.J2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string K1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.K1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'K1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.K1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.L1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.L1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M1 {
                get {
                    try {
                        return ((string)(this[this.tablePROJECT_BUSINESS_PLAN.M1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1\' in table \'PROJECT_BUSINESS_PLAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJECT_BUSINESS_PLAN.M1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsA1aNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.A1aColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetA1aNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.A1aColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsA1bNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.A1bColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetA1bNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.A1bColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsA1cNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.A1cColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetA1cNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.A1cColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsA1dNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.A1dColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetA1dNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.A1dColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsA2aNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.A2aColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetA2aNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.A2aColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsA2bNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.A2bColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetA2bNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.A2bColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsA2cNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.A2cColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetA2cNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.A2cColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.B1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.B1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB2Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.B2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB2Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.B2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB3Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.B3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB3Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.B3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB4aNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.B4aColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB4aNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.B4aColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB4bNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.B4bColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB4bNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.B4bColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB4cNull() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.B4cColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB4cNull() {
                this[this.tablePROJECT_BUSINESS_PLAN.B4cColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB5Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.B5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB5Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.B5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB6Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.B6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB6Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.B6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.C1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.C1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC2Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.C2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC2Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.C2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC3Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.C3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC3Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.C3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.D1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.D1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD2Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.D2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD2Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.D2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.E1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.E1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE2Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.E2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE2Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.E2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE3Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.E3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE3Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.E3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE4Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.E4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE4Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.E4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE5Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.E5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE5Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.E5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.F1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.F1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF2Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.F2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF2Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.F2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsG1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.G1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetG1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.G1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.H1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.H1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH2Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.H2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH2Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.H2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsI1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.I1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetI1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.I1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsI2Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.I2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetI2Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.I2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsI3Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.I3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetI3Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.I3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsI4Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.I4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetI4Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.I4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsI5Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.I5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetI5Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.I5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJ1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.J1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJ1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.J1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJ2Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.J2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJ2Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.J2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsK1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.K1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetK1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.K1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.L1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.L1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1Null() {
                return this.IsNull(this.tablePROJECT_BUSINESS_PLAN.M1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1Null() {
                this[this.tablePROJECT_BUSINESS_PLAN.M1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PROJECT_BUSINESS_PLANRowChangeEvent : global::System.EventArgs {
            
            private PROJECT_BUSINESS_PLANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJECT_BUSINESS_PLANRowChangeEvent(PROJECT_BUSINESS_PLANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJECT_BUSINESS_PLANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Types.TypeDataSets.DSProjectBusinessPlanTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PROJECT_BUSINESS_PLANTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PROJECT_BUSINESS_PLANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PROJECT_BUSINESS_PLAN";
            tableMapping.ColumnMappings.Add("RECID", "RECID");
            tableMapping.ColumnMappings.Add("PROJECTID", "PROJECTID");
            tableMapping.ColumnMappings.Add("A1a", "A1a");
            tableMapping.ColumnMappings.Add("A1b", "A1b");
            tableMapping.ColumnMappings.Add("A1c", "A1c");
            tableMapping.ColumnMappings.Add("A1d", "A1d");
            tableMapping.ColumnMappings.Add("A2a", "A2a");
            tableMapping.ColumnMappings.Add("A2b", "A2b");
            tableMapping.ColumnMappings.Add("A2c", "A2c");
            tableMapping.ColumnMappings.Add("B1", "B1");
            tableMapping.ColumnMappings.Add("B2", "B2");
            tableMapping.ColumnMappings.Add("B3", "B3");
            tableMapping.ColumnMappings.Add("B4a", "B4a");
            tableMapping.ColumnMappings.Add("B4b", "B4b");
            tableMapping.ColumnMappings.Add("B4c", "B4c");
            tableMapping.ColumnMappings.Add("B5", "B5");
            tableMapping.ColumnMappings.Add("B6", "B6");
            tableMapping.ColumnMappings.Add("C1", "C1");
            tableMapping.ColumnMappings.Add("C2", "C2");
            tableMapping.ColumnMappings.Add("C3", "C3");
            tableMapping.ColumnMappings.Add("D1", "D1");
            tableMapping.ColumnMappings.Add("D2", "D2");
            tableMapping.ColumnMappings.Add("E1", "E1");
            tableMapping.ColumnMappings.Add("E2", "E2");
            tableMapping.ColumnMappings.Add("E3", "E3");
            tableMapping.ColumnMappings.Add("E4", "E4");
            tableMapping.ColumnMappings.Add("E5", "E5");
            tableMapping.ColumnMappings.Add("F1", "F1");
            tableMapping.ColumnMappings.Add("F2", "F2");
            tableMapping.ColumnMappings.Add("G1", "G1");
            tableMapping.ColumnMappings.Add("H1", "H1");
            tableMapping.ColumnMappings.Add("H2", "H2");
            tableMapping.ColumnMappings.Add("I1", "I1");
            tableMapping.ColumnMappings.Add("I2", "I2");
            tableMapping.ColumnMappings.Add("I3", "I3");
            tableMapping.ColumnMappings.Add("I4", "I4");
            tableMapping.ColumnMappings.Add("I5", "I5");
            tableMapping.ColumnMappings.Add("J1", "J1");
            tableMapping.ColumnMappings.Add("J2", "J2");
            tableMapping.ColumnMappings.Add("K1", "K1");
            tableMapping.ColumnMappings.Add("L1", "L1");
            tableMapping.ColumnMappings.Add("M1", "M1");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PROJECT_BUSINESS_PLAN] WHERE (([RECID] = @Original_RECID) AND " +
                "([PROJECTID] = @Original_PROJECTID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROJECTID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECTID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PROJECT_BUSINESS_PLAN] ([PROJECTID], [A1a], [A1b], [A1c], [A1d], [A2a], [A2b], [A2c], [B1], [B2], [B3], [B4a], [B4b], [B4c], [B5], [B6], [C1], [C2], [C3], [D1], [D2], [E1], [E2], [E3], [E4], [E5], [F1], [F2], [G1], [H1], [H2], [I1], [I2], [I3], [I4], [I5], [J1], [J2], [K1], [L1], [M1]) VALUES (@PROJECTID, @A1a, @A1b, @A1c, @A1d, @A2a, @A2b, @A2c, @B1, @B2, @B3, @B4a, @B4b, @B4c, @B5, @B6, @C1, @C2, @C3, @D1, @D2, @E1, @E2, @E3, @E4, @E5, @F1, @F2, @G1, @H1, @H2, @I1, @I2, @I3, @I4, @I5, @J1, @J2, @K1, @L1, @M1);
SELECT RECID, PROJECTID, A1a, A1b, A1c, A1d, A2a, A2b, A2c, B1, B2, B3, B4a, B4b, B4c, B5, B6, C1, C2, C3, D1, D2, E1, E2, E3, E4, E5, F1, F2, G1, H1, H2, I1, I2, I3, I4, I5, J1, J2, K1, L1, M1 FROM PROJECT_BUSINESS_PLAN WHERE (RECID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROJECTID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECTID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1a", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1a", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1b", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1b", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1c", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1c", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1d", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1d", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2a", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2a", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2b", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2b", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2c", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2c", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B4a", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B4a", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B4b", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B4b", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B4c", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B4c", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B5", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B6", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E4", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E5", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I4", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I5", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@J1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "J1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@J2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "J2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@K1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "K1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "M1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PROJECT_BUSINESS_PLAN] SET [PROJECTID] = @PROJECTID, [A1a] = @A1a, [A1b] = @A1b, [A1c] = @A1c, [A1d] = @A1d, [A2a] = @A2a, [A2b] = @A2b, [A2c] = @A2c, [B1] = @B1, [B2] = @B2, [B3] = @B3, [B4a] = @B4a, [B4b] = @B4b, [B4c] = @B4c, [B5] = @B5, [B6] = @B6, [C1] = @C1, [C2] = @C2, [C3] = @C3, [D1] = @D1, [D2] = @D2, [E1] = @E1, [E2] = @E2, [E3] = @E3, [E4] = @E4, [E5] = @E5, [F1] = @F1, [F2] = @F2, [G1] = @G1, [H1] = @H1, [H2] = @H2, [I1] = @I1, [I2] = @I2, [I3] = @I3, [I4] = @I4, [I5] = @I5, [J1] = @J1, [J2] = @J2, [K1] = @K1, [L1] = @L1, [M1] = @M1 WHERE (([RECID] = @Original_RECID) AND ([PROJECTID] = @Original_PROJECTID));
SELECT RECID, PROJECTID, A1a, A1b, A1c, A1d, A2a, A2b, A2c, B1, B2, B3, B4a, B4b, B4c, B5, B6, C1, C2, C3, D1, D2, E1, E2, E3, E4, E5, F1, F2, G1, H1, H2, I1, I2, I3, I4, I5, J1, J2, K1, L1, M1 FROM PROJECT_BUSINESS_PLAN WHERE (RECID = @RECID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROJECTID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECTID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1a", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1a", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1b", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1b", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1c", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1c", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1d", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1d", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2a", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2a", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2b", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2b", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2c", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2c", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B4a", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B4a", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B4b", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B4b", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B4c", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B4c", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B5", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B6", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E4", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E5", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I4", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@I5", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "I5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@J1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "J1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@J2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "J2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@K1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "K1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "M1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROJECTID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECTID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RECID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Types.Properties.Settings.Default.MersinBANConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RECID, PROJECTID, A1a, A1b, A1c, A1d, A2a, A2b, A2c, B1, B2, B3, B4a, B4b," +
                " B4c, B5, B6, C1, C2, C3, D1, D2, E1, E2, E3, E4, E5, F1, F2, G1, H1, H2, I1, I2" +
                ", I3, I4, I5, J1, J2, K1, L1, M1 FROM dbo.PROJECT_BUSINESS_PLAN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSProjectBusinessPlan.PROJECT_BUSINESS_PLANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSProjectBusinessPlan.PROJECT_BUSINESS_PLANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSProjectBusinessPlan.PROJECT_BUSINESS_PLANDataTable dataTable = new DSProjectBusinessPlan.PROJECT_BUSINESS_PLANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSProjectBusinessPlan.PROJECT_BUSINESS_PLANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSProjectBusinessPlan dataSet) {
            return this.Adapter.Update(dataSet, "PROJECT_BUSINESS_PLAN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RECID, int Original_PROJECTID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RECID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_PROJECTID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int PROJECTID, 
                    string A1a, 
                    string A1b, 
                    string A1c, 
                    string A1d, 
                    string A2a, 
                    string A2b, 
                    string A2c, 
                    string B1, 
                    string B2, 
                    string B3, 
                    string B4a, 
                    string B4b, 
                    string B4c, 
                    string B5, 
                    string B6, 
                    string C1, 
                    string C2, 
                    string C3, 
                    string D1, 
                    string D2, 
                    string E1, 
                    string E2, 
                    string E3, 
                    string E4, 
                    string E5, 
                    string F1, 
                    string F2, 
                    string G1, 
                    string H1, 
                    string H2, 
                    string I1, 
                    string I2, 
                    string I3, 
                    string I4, 
                    string I5, 
                    string J1, 
                    string J2, 
                    string K1, 
                    string L1, 
                    string M1) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PROJECTID));
            if ((A1a == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(A1a));
            }
            if ((A1b == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(A1b));
            }
            if ((A1c == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(A1c));
            }
            if ((A1d == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(A1d));
            }
            if ((A2a == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(A2a));
            }
            if ((A2b == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(A2b));
            }
            if ((A2c == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(A2c));
            }
            if ((B1 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(B1));
            }
            if ((B2 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(B2));
            }
            if ((B3 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(B3));
            }
            if ((B4a == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(B4a));
            }
            if ((B4b == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(B4b));
            }
            if ((B4c == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(B4c));
            }
            if ((B5 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(B5));
            }
            if ((B6 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(B6));
            }
            if ((C1 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(C1));
            }
            if ((C2 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(C2));
            }
            if ((C3 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(C3));
            }
            if ((D1 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(D1));
            }
            if ((D2 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(D2));
            }
            if ((E1 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(E1));
            }
            if ((E2 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(E2));
            }
            if ((E3 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(E3));
            }
            if ((E4 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(E4));
            }
            if ((E5 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(E5));
            }
            if ((F1 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(F1));
            }
            if ((F2 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(F2));
            }
            if ((G1 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(G1));
            }
            if ((H1 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(H1));
            }
            if ((H2 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(H2));
            }
            if ((I1 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(I1));
            }
            if ((I2 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(I2));
            }
            if ((I3 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(I3));
            }
            if ((I4 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(I4));
            }
            if ((I5 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(I5));
            }
            if ((J1 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(J1));
            }
            if ((J2 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(J2));
            }
            if ((K1 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(K1));
            }
            if ((L1 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(L1));
            }
            if ((M1 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(M1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int PROJECTID, 
                    string A1a, 
                    string A1b, 
                    string A1c, 
                    string A1d, 
                    string A2a, 
                    string A2b, 
                    string A2c, 
                    string B1, 
                    string B2, 
                    string B3, 
                    string B4a, 
                    string B4b, 
                    string B4c, 
                    string B5, 
                    string B6, 
                    string C1, 
                    string C2, 
                    string C3, 
                    string D1, 
                    string D2, 
                    string E1, 
                    string E2, 
                    string E3, 
                    string E4, 
                    string E5, 
                    string F1, 
                    string F2, 
                    string G1, 
                    string H1, 
                    string H2, 
                    string I1, 
                    string I2, 
                    string I3, 
                    string I4, 
                    string I5, 
                    string J1, 
                    string J2, 
                    string K1, 
                    string L1, 
                    string M1, 
                    int Original_RECID, 
                    int Original_PROJECTID, 
                    int RECID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PROJECTID));
            if ((A1a == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(A1a));
            }
            if ((A1b == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(A1b));
            }
            if ((A1c == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(A1c));
            }
            if ((A1d == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(A1d));
            }
            if ((A2a == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(A2a));
            }
            if ((A2b == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(A2b));
            }
            if ((A2c == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(A2c));
            }
            if ((B1 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(B1));
            }
            if ((B2 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(B2));
            }
            if ((B3 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(B3));
            }
            if ((B4a == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(B4a));
            }
            if ((B4b == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(B4b));
            }
            if ((B4c == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(B4c));
            }
            if ((B5 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(B5));
            }
            if ((B6 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(B6));
            }
            if ((C1 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(C1));
            }
            if ((C2 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(C2));
            }
            if ((C3 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(C3));
            }
            if ((D1 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(D1));
            }
            if ((D2 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(D2));
            }
            if ((E1 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(E1));
            }
            if ((E2 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(E2));
            }
            if ((E3 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(E3));
            }
            if ((E4 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(E4));
            }
            if ((E5 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(E5));
            }
            if ((F1 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(F1));
            }
            if ((F2 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(F2));
            }
            if ((G1 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(G1));
            }
            if ((H1 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(H1));
            }
            if ((H2 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(H2));
            }
            if ((I1 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(I1));
            }
            if ((I2 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(I2));
            }
            if ((I3 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(I3));
            }
            if ((I4 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(I4));
            }
            if ((I5 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(I5));
            }
            if ((J1 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(J1));
            }
            if ((J2 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(J2));
            }
            if ((K1 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(K1));
            }
            if ((L1 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(L1));
            }
            if ((M1 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(M1));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_RECID));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_PROJECTID));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(RECID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int PROJECTID, 
                    string A1a, 
                    string A1b, 
                    string A1c, 
                    string A1d, 
                    string A2a, 
                    string A2b, 
                    string A2c, 
                    string B1, 
                    string B2, 
                    string B3, 
                    string B4a, 
                    string B4b, 
                    string B4c, 
                    string B5, 
                    string B6, 
                    string C1, 
                    string C2, 
                    string C3, 
                    string D1, 
                    string D2, 
                    string E1, 
                    string E2, 
                    string E3, 
                    string E4, 
                    string E5, 
                    string F1, 
                    string F2, 
                    string G1, 
                    string H1, 
                    string H2, 
                    string I1, 
                    string I2, 
                    string I3, 
                    string I4, 
                    string I5, 
                    string J1, 
                    string J2, 
                    string K1, 
                    string L1, 
                    string M1, 
                    int Original_RECID, 
                    int Original_PROJECTID) {
            return this.Update(PROJECTID, A1a, A1b, A1c, A1d, A2a, A2b, A2c, B1, B2, B3, B4a, B4b, B4c, B5, B6, C1, C2, C3, D1, D2, E1, E2, E3, E4, E5, F1, F2, G1, H1, H2, I1, I2, I3, I4, I5, J1, J2, K1, L1, M1, Original_RECID, Original_PROJECTID, Original_RECID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PROJECT_BUSINESS_PLANTableAdapter _pROJECT_BUSINESS_PLANTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PROJECT_BUSINESS_PLANTableAdapter PROJECT_BUSINESS_PLANTableAdapter {
            get {
                return this._pROJECT_BUSINESS_PLANTableAdapter;
            }
            set {
                this._pROJECT_BUSINESS_PLANTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._pROJECT_BUSINESS_PLANTableAdapter != null) 
                            && (this._pROJECT_BUSINESS_PLANTableAdapter.Connection != null))) {
                    return this._pROJECT_BUSINESS_PLANTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._pROJECT_BUSINESS_PLANTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DSProjectBusinessPlan dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pROJECT_BUSINESS_PLANTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PROJECT_BUSINESS_PLAN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pROJECT_BUSINESS_PLANTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DSProjectBusinessPlan dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pROJECT_BUSINESS_PLANTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PROJECT_BUSINESS_PLAN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pROJECT_BUSINESS_PLANTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DSProjectBusinessPlan dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._pROJECT_BUSINESS_PLANTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PROJECT_BUSINESS_PLAN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pROJECT_BUSINESS_PLANTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DSProjectBusinessPlan dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._pROJECT_BUSINESS_PLANTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pROJECT_BUSINESS_PLANTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._pROJECT_BUSINESS_PLANTableAdapter != null)) {
                    revertConnections.Add(this._pROJECT_BUSINESS_PLANTableAdapter, this._pROJECT_BUSINESS_PLANTableAdapter.Connection);
                    this._pROJECT_BUSINESS_PLANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pROJECT_BUSINESS_PLANTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pROJECT_BUSINESS_PLANTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pROJECT_BUSINESS_PLANTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pROJECT_BUSINESS_PLANTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._pROJECT_BUSINESS_PLANTableAdapter != null)) {
                    this._pROJECT_BUSINESS_PLANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pROJECT_BUSINESS_PLANTableAdapter]));
                    this._pROJECT_BUSINESS_PLANTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591