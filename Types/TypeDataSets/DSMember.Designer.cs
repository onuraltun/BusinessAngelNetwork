//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Types.TypeDataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSMember")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSMember : global::System.Data.DataSet {
        
        private MEMBERDataTable tableMEMBER;
        
        private global::System.Data.DataRelation relationFK_MEMBER_MEMBER;
        
        private global::System.Data.DataRelation relationFK_MEMBER_MEMBER2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSMember() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSMember(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MEMBER"] != null)) {
                    base.Tables.Add(new MEMBERDataTable(ds.Tables["MEMBER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MEMBERDataTable MEMBER {
            get {
                return this.tableMEMBER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSMember cln = ((DSMember)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MEMBER"] != null)) {
                    base.Tables.Add(new MEMBERDataTable(ds.Tables["MEMBER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMEMBER = ((MEMBERDataTable)(base.Tables["MEMBER"]));
            if ((initTable == true)) {
                if ((this.tableMEMBER != null)) {
                    this.tableMEMBER.InitVars();
                }
            }
            this.relationFK_MEMBER_MEMBER = this.Relations["FK_MEMBER_MEMBER"];
            this.relationFK_MEMBER_MEMBER2 = this.Relations["FK_MEMBER_MEMBER2"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSMember";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSMember.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMEMBER = new MEMBERDataTable();
            base.Tables.Add(this.tableMEMBER);
            this.relationFK_MEMBER_MEMBER = new global::System.Data.DataRelation("FK_MEMBER_MEMBER", new global::System.Data.DataColumn[] {
                        this.tableMEMBER.RECIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMEMBER.CREATEDBYColumn}, false);
            this.Relations.Add(this.relationFK_MEMBER_MEMBER);
            this.relationFK_MEMBER_MEMBER2 = new global::System.Data.DataRelation("FK_MEMBER_MEMBER2", new global::System.Data.DataColumn[] {
                        this.tableMEMBER.RECIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMEMBER.SUPERVISORColumn}, false);
            this.Relations.Add(this.relationFK_MEMBER_MEMBER2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMEMBER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSMember ds = new DSMember();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MEMBERRowChangeEventHandler(object sender, MEMBERRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MEMBERDataTable : global::System.Data.TypedTableBase<MEMBERRow> {
            
            private global::System.Data.DataColumn columnRECID;
            
            private global::System.Data.DataColumn columnTITLE;
            
            private global::System.Data.DataColumn columnMEMBERSHIPTYPE;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSURNAME;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnPASSWORD;
            
            private global::System.Data.DataColumn columnCOMPANYNAME;
            
            private global::System.Data.DataColumn columnPOSITION;
            
            private global::System.Data.DataColumn columnLOGO;
            
            private global::System.Data.DataColumn columnPICTURE;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnCITY;
            
            private global::System.Data.DataColumn columnPROVINCE;
            
            private global::System.Data.DataColumn columnCOUNTRY;
            
            private global::System.Data.DataColumn columnPOSTALCODE;
            
            private global::System.Data.DataColumn columnTELEPHONE;
            
            private global::System.Data.DataColumn columnFAX;
            
            private global::System.Data.DataColumn columnMOBILENUMBER;
            
            private global::System.Data.DataColumn columnAMOUNTSPERINVESTMENT;
            
            private global::System.Data.DataColumn columnINVESTORTYPE;
            
            private global::System.Data.DataColumn columnCREATEDBY;
            
            private global::System.Data.DataColumn columnCREATIONDATE;
            
            private global::System.Data.DataColumn columnMODIFICATEDBY;
            
            private global::System.Data.DataColumn columnMODIFICATIONDATE;
            
            private global::System.Data.DataColumn columnSUPERVISOR;
            
            private global::System.Data.DataColumn columnMEMBERAPPROVED;
            
            private global::System.Data.DataColumn columnSUPERVISORAPPROVED;
            
            private global::System.Data.DataColumn columnEXPERTISE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERDataTable() {
                this.TableName = "MEMBER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEMBERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MEMBERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECIDColumn {
                get {
                    return this.columnRECID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TITLEColumn {
                get {
                    return this.columnTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEMBERSHIPTYPEColumn {
                get {
                    return this.columnMEMBERSHIPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SURNAMEColumn {
                get {
                    return this.columnSURNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASSWORDColumn {
                get {
                    return this.columnPASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYNAMEColumn {
                get {
                    return this.columnCOMPANYNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSITIONColumn {
                get {
                    return this.columnPOSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOGOColumn {
                get {
                    return this.columnLOGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICTUREColumn {
                get {
                    return this.columnPICTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CITYColumn {
                get {
                    return this.columnCITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROVINCEColumn {
                get {
                    return this.columnPROVINCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTRYColumn {
                get {
                    return this.columnCOUNTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSTALCODEColumn {
                get {
                    return this.columnPOSTALCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELEPHONEColumn {
                get {
                    return this.columnTELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAXColumn {
                get {
                    return this.columnFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOBILENUMBERColumn {
                get {
                    return this.columnMOBILENUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AMOUNTSPERINVESTMENTColumn {
                get {
                    return this.columnAMOUNTSPERINVESTMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVESTORTYPEColumn {
                get {
                    return this.columnINVESTORTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATEDBYColumn {
                get {
                    return this.columnCREATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATIONDATEColumn {
                get {
                    return this.columnCREATIONDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODIFICATEDBYColumn {
                get {
                    return this.columnMODIFICATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODIFICATIONDATEColumn {
                get {
                    return this.columnMODIFICATIONDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUPERVISORColumn {
                get {
                    return this.columnSUPERVISOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEMBERAPPROVEDColumn {
                get {
                    return this.columnMEMBERAPPROVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUPERVISORAPPROVEDColumn {
                get {
                    return this.columnSUPERVISORAPPROVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXPERTISEColumn {
                get {
                    return this.columnEXPERTISE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow this[int index] {
                get {
                    return ((MEMBERRow)(this.Rows[index]));
                }
            }
            
            public event MEMBERRowChangeEventHandler MEMBERRowChanging;
            
            public event MEMBERRowChangeEventHandler MEMBERRowChanged;
            
            public event MEMBERRowChangeEventHandler MEMBERRowDeleting;
            
            public event MEMBERRowChangeEventHandler MEMBERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMEMBERRow(MEMBERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow AddMEMBERRow(
                        int TITLE, 
                        int MEMBERSHIPTYPE, 
                        string NAME, 
                        string SURNAME, 
                        string EMAIL, 
                        string PASSWORD, 
                        string COMPANYNAME, 
                        string POSITION, 
                        byte[] LOGO, 
                        byte[] PICTURE, 
                        string ADDRESS, 
                        string CITY, 
                        string PROVINCE, 
                        string COUNTRY, 
                        string POSTALCODE, 
                        string TELEPHONE, 
                        string FAX, 
                        string MOBILENUMBER, 
                        decimal AMOUNTSPERINVESTMENT, 
                        int INVESTORTYPE, 
                        MEMBERRow parentMEMBERRowByFK_MEMBER_MEMBER, 
                        System.DateTime CREATIONDATE, 
                        int MODIFICATEDBY, 
                        System.DateTime MODIFICATIONDATE, 
                        MEMBERRow parentMEMBERRowByFK_MEMBER_MEMBER2, 
                        bool MEMBERAPPROVED, 
                        bool SUPERVISORAPPROVED, 
                        string EXPERTISE) {
                MEMBERRow rowMEMBERRow = ((MEMBERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TITLE,
                        MEMBERSHIPTYPE,
                        NAME,
                        SURNAME,
                        EMAIL,
                        PASSWORD,
                        COMPANYNAME,
                        POSITION,
                        LOGO,
                        PICTURE,
                        ADDRESS,
                        CITY,
                        PROVINCE,
                        COUNTRY,
                        POSTALCODE,
                        TELEPHONE,
                        FAX,
                        MOBILENUMBER,
                        AMOUNTSPERINVESTMENT,
                        INVESTORTYPE,
                        null,
                        CREATIONDATE,
                        MODIFICATEDBY,
                        MODIFICATIONDATE,
                        null,
                        MEMBERAPPROVED,
                        SUPERVISORAPPROVED,
                        EXPERTISE};
                if ((parentMEMBERRowByFK_MEMBER_MEMBER != null)) {
                    columnValuesArray[21] = parentMEMBERRowByFK_MEMBER_MEMBER[0];
                }
                if ((parentMEMBERRowByFK_MEMBER_MEMBER2 != null)) {
                    columnValuesArray[25] = parentMEMBERRowByFK_MEMBER_MEMBER2[0];
                }
                rowMEMBERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMEMBERRow);
                return rowMEMBERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow FindByRECID(int RECID) {
                return ((MEMBERRow)(this.Rows.Find(new object[] {
                            RECID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MEMBERDataTable cln = ((MEMBERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MEMBERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRECID = base.Columns["RECID"];
                this.columnTITLE = base.Columns["TITLE"];
                this.columnMEMBERSHIPTYPE = base.Columns["MEMBERSHIPTYPE"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSURNAME = base.Columns["SURNAME"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnPASSWORD = base.Columns["PASSWORD"];
                this.columnCOMPANYNAME = base.Columns["COMPANYNAME"];
                this.columnPOSITION = base.Columns["POSITION"];
                this.columnLOGO = base.Columns["LOGO"];
                this.columnPICTURE = base.Columns["PICTURE"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnCITY = base.Columns["CITY"];
                this.columnPROVINCE = base.Columns["PROVINCE"];
                this.columnCOUNTRY = base.Columns["COUNTRY"];
                this.columnPOSTALCODE = base.Columns["POSTALCODE"];
                this.columnTELEPHONE = base.Columns["TELEPHONE"];
                this.columnFAX = base.Columns["FAX"];
                this.columnMOBILENUMBER = base.Columns["MOBILENUMBER"];
                this.columnAMOUNTSPERINVESTMENT = base.Columns["AMOUNTSPERINVESTMENT"];
                this.columnINVESTORTYPE = base.Columns["INVESTORTYPE"];
                this.columnCREATEDBY = base.Columns["CREATEDBY"];
                this.columnCREATIONDATE = base.Columns["CREATIONDATE"];
                this.columnMODIFICATEDBY = base.Columns["MODIFICATEDBY"];
                this.columnMODIFICATIONDATE = base.Columns["MODIFICATIONDATE"];
                this.columnSUPERVISOR = base.Columns["SUPERVISOR"];
                this.columnMEMBERAPPROVED = base.Columns["MEMBERAPPROVED"];
                this.columnSUPERVISORAPPROVED = base.Columns["SUPERVISORAPPROVED"];
                this.columnEXPERTISE = base.Columns["EXPERTISE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRECID = new global::System.Data.DataColumn("RECID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECID);
                this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITLE);
                this.columnMEMBERSHIPTYPE = new global::System.Data.DataColumn("MEMBERSHIPTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBERSHIPTYPE);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSURNAME = new global::System.Data.DataColumn("SURNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSURNAME);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnPASSWORD = new global::System.Data.DataColumn("PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD);
                this.columnCOMPANYNAME = new global::System.Data.DataColumn("COMPANYNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYNAME);
                this.columnPOSITION = new global::System.Data.DataColumn("POSITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION);
                this.columnLOGO = new global::System.Data.DataColumn("LOGO", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGO);
                this.columnPICTURE = new global::System.Data.DataColumn("PICTURE", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICTURE);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnCITY = new global::System.Data.DataColumn("CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCITY);
                this.columnPROVINCE = new global::System.Data.DataColumn("PROVINCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROVINCE);
                this.columnCOUNTRY = new global::System.Data.DataColumn("COUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTRY);
                this.columnPOSTALCODE = new global::System.Data.DataColumn("POSTALCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSTALCODE);
                this.columnTELEPHONE = new global::System.Data.DataColumn("TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEPHONE);
                this.columnFAX = new global::System.Data.DataColumn("FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX);
                this.columnMOBILENUMBER = new global::System.Data.DataColumn("MOBILENUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOBILENUMBER);
                this.columnAMOUNTSPERINVESTMENT = new global::System.Data.DataColumn("AMOUNTSPERINVESTMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNTSPERINVESTMENT);
                this.columnINVESTORTYPE = new global::System.Data.DataColumn("INVESTORTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVESTORTYPE);
                this.columnCREATEDBY = new global::System.Data.DataColumn("CREATEDBY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDBY);
                this.columnCREATIONDATE = new global::System.Data.DataColumn("CREATIONDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATIONDATE);
                this.columnMODIFICATEDBY = new global::System.Data.DataColumn("MODIFICATEDBY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFICATEDBY);
                this.columnMODIFICATIONDATE = new global::System.Data.DataColumn("MODIFICATIONDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFICATIONDATE);
                this.columnSUPERVISOR = new global::System.Data.DataColumn("SUPERVISOR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPERVISOR);
                this.columnMEMBERAPPROVED = new global::System.Data.DataColumn("MEMBERAPPROVED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBERAPPROVED);
                this.columnSUPERVISORAPPROVED = new global::System.Data.DataColumn("SUPERVISORAPPROVED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPERVISORAPPROVED);
                this.columnEXPERTISE = new global::System.Data.DataColumn("EXPERTISE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPERTISE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRECID}, true));
                this.columnRECID.AutoIncrement = true;
                this.columnRECID.AutoIncrementSeed = -1;
                this.columnRECID.AutoIncrementStep = -1;
                this.columnRECID.AllowDBNull = false;
                this.columnRECID.ReadOnly = true;
                this.columnRECID.Unique = true;
                this.columnTITLE.AllowDBNull = false;
                this.columnMEMBERSHIPTYPE.AllowDBNull = false;
                this.columnMEMBERSHIPTYPE.DefaultValue = ((int)(0));
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 20;
                this.columnSURNAME.AllowDBNull = false;
                this.columnSURNAME.MaxLength = 20;
                this.columnEMAIL.AllowDBNull = false;
                this.columnEMAIL.MaxLength = 30;
                this.columnPASSWORD.AllowDBNull = false;
                this.columnPASSWORD.MaxLength = 100;
                this.columnCOMPANYNAME.MaxLength = 30;
                this.columnPOSITION.MaxLength = 30;
                this.columnADDRESS.MaxLength = 250;
                this.columnCITY.MaxLength = 50;
                this.columnPROVINCE.MaxLength = 50;
                this.columnCOUNTRY.MaxLength = 50;
                this.columnPOSTALCODE.MaxLength = 50;
                this.columnTELEPHONE.MaxLength = 15;
                this.columnFAX.MaxLength = 15;
                this.columnMOBILENUMBER.MaxLength = 15;
                this.columnEXPERTISE.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow NewMEMBERRow() {
                return ((MEMBERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MEMBERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MEMBERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MEMBERRowChanged != null)) {
                    this.MEMBERRowChanged(this, new MEMBERRowChangeEvent(((MEMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MEMBERRowChanging != null)) {
                    this.MEMBERRowChanging(this, new MEMBERRowChangeEvent(((MEMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MEMBERRowDeleted != null)) {
                    this.MEMBERRowDeleted(this, new MEMBERRowChangeEvent(((MEMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MEMBERRowDeleting != null)) {
                    this.MEMBERRowDeleting(this, new MEMBERRowChangeEvent(((MEMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMEMBERRow(MEMBERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSMember ds = new DSMember();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MEMBERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MEMBERRow : global::System.Data.DataRow {
            
            private MEMBERDataTable tableMEMBER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEMBERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMEMBER = ((MEMBERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RECID {
                get {
                    return ((int)(this[this.tableMEMBER.RECIDColumn]));
                }
                set {
                    this[this.tableMEMBER.RECIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TITLE {
                get {
                    return ((int)(this[this.tableMEMBER.TITLEColumn]));
                }
                set {
                    this[this.tableMEMBER.TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MEMBERSHIPTYPE {
                get {
                    return ((int)(this[this.tableMEMBER.MEMBERSHIPTYPEColumn]));
                }
                set {
                    this[this.tableMEMBER.MEMBERSHIPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    return ((string)(this[this.tableMEMBER.NAMEColumn]));
                }
                set {
                    this[this.tableMEMBER.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SURNAME {
                get {
                    return ((string)(this[this.tableMEMBER.SURNAMEColumn]));
                }
                set {
                    this[this.tableMEMBER.SURNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    return ((string)(this[this.tableMEMBER.EMAILColumn]));
                }
                set {
                    this[this.tableMEMBER.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PASSWORD {
                get {
                    return ((string)(this[this.tableMEMBER.PASSWORDColumn]));
                }
                set {
                    this[this.tableMEMBER.PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYNAME {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.COMPANYNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANYNAME\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.COMPANYNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSITION {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSITION\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] LOGO {
                get {
                    try {
                        return ((byte[])(this[this.tableMEMBER.LOGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOGO\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.LOGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] PICTURE {
                get {
                    try {
                        return ((byte[])(this[this.tableMEMBER.PICTUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICTURE\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.PICTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CITY {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.CITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CITY\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROVINCE {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.PROVINCEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROVINCE\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.PROVINCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUNTRY {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.COUNTRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNTRY\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.COUNTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSTALCODE {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.POSTALCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSTALCODE\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.POSTALCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELEPHONE {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.TELEPHONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELEPHONE\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.FAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAX\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOBILENUMBER {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.MOBILENUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOBILENUMBER\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.MOBILENUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AMOUNTSPERINVESTMENT {
                get {
                    try {
                        return ((decimal)(this[this.tableMEMBER.AMOUNTSPERINVESTMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNTSPERINVESTMENT\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.AMOUNTSPERINVESTMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int INVESTORTYPE {
                get {
                    try {
                        return ((int)(this[this.tableMEMBER.INVESTORTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INVESTORTYPE\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.INVESTORTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CREATEDBY {
                get {
                    try {
                        return ((int)(this[this.tableMEMBER.CREATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATEDBY\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.CREATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATIONDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMEMBER.CREATIONDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATIONDATE\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.CREATIONDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MODIFICATEDBY {
                get {
                    try {
                        return ((int)(this[this.tableMEMBER.MODIFICATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODIFICATEDBY\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.MODIFICATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFICATIONDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMEMBER.MODIFICATIONDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODIFICATIONDATE\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.MODIFICATIONDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SUPERVISOR {
                get {
                    try {
                        return ((int)(this[this.tableMEMBER.SUPERVISORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUPERVISOR\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.SUPERVISORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MEMBERAPPROVED {
                get {
                    try {
                        return ((bool)(this[this.tableMEMBER.MEMBERAPPROVEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBERAPPROVED\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.MEMBERAPPROVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SUPERVISORAPPROVED {
                get {
                    try {
                        return ((bool)(this[this.tableMEMBER.SUPERVISORAPPROVEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUPERVISORAPPROVED\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.SUPERVISORAPPROVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXPERTISE {
                get {
                    try {
                        return ((string)(this[this.tableMEMBER.EXPERTISEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPERTISE\' in table \'MEMBER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEMBER.EXPERTISEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow MEMBERRowParentByFK_MEMBER_MEMBER {
                get {
                    return ((MEMBERRow)(this.GetParentRow(this.Table.ParentRelations["FK_MEMBER_MEMBER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MEMBER_MEMBER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow MEMBERRowParentByFK_MEMBER_MEMBER2 {
                get {
                    return ((MEMBERRow)(this.GetParentRow(this.Table.ParentRelations["FK_MEMBER_MEMBER2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MEMBER_MEMBER2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANYNAMENull() {
                return this.IsNull(this.tableMEMBER.COMPANYNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANYNAMENull() {
                this[this.tableMEMBER.COMPANYNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSITIONNull() {
                return this.IsNull(this.tableMEMBER.POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSITIONNull() {
                this[this.tableMEMBER.POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOGONull() {
                return this.IsNull(this.tableMEMBER.LOGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOGONull() {
                this[this.tableMEMBER.LOGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICTURENull() {
                return this.IsNull(this.tableMEMBER.PICTUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICTURENull() {
                this[this.tableMEMBER.PICTUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tableMEMBER.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESSNull() {
                this[this.tableMEMBER.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCITYNull() {
                return this.IsNull(this.tableMEMBER.CITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCITYNull() {
                this[this.tableMEMBER.CITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROVINCENull() {
                return this.IsNull(this.tableMEMBER.PROVINCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROVINCENull() {
                this[this.tableMEMBER.PROVINCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTRYNull() {
                return this.IsNull(this.tableMEMBER.COUNTRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTRYNull() {
                this[this.tableMEMBER.COUNTRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSTALCODENull() {
                return this.IsNull(this.tableMEMBER.POSTALCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSTALCODENull() {
                this[this.tableMEMBER.POSTALCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELEPHONENull() {
                return this.IsNull(this.tableMEMBER.TELEPHONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELEPHONENull() {
                this[this.tableMEMBER.TELEPHONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAXNull() {
                return this.IsNull(this.tableMEMBER.FAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAXNull() {
                this[this.tableMEMBER.FAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOBILENUMBERNull() {
                return this.IsNull(this.tableMEMBER.MOBILENUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOBILENUMBERNull() {
                this[this.tableMEMBER.MOBILENUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAMOUNTSPERINVESTMENTNull() {
                return this.IsNull(this.tableMEMBER.AMOUNTSPERINVESTMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAMOUNTSPERINVESTMENTNull() {
                this[this.tableMEMBER.AMOUNTSPERINVESTMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVESTORTYPENull() {
                return this.IsNull(this.tableMEMBER.INVESTORTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVESTORTYPENull() {
                this[this.tableMEMBER.INVESTORTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATEDBYNull() {
                return this.IsNull(this.tableMEMBER.CREATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATEDBYNull() {
                this[this.tableMEMBER.CREATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATIONDATENull() {
                return this.IsNull(this.tableMEMBER.CREATIONDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATIONDATENull() {
                this[this.tableMEMBER.CREATIONDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFICATEDBYNull() {
                return this.IsNull(this.tableMEMBER.MODIFICATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFICATEDBYNull() {
                this[this.tableMEMBER.MODIFICATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFICATIONDATENull() {
                return this.IsNull(this.tableMEMBER.MODIFICATIONDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFICATIONDATENull() {
                this[this.tableMEMBER.MODIFICATIONDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPERVISORNull() {
                return this.IsNull(this.tableMEMBER.SUPERVISORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPERVISORNull() {
                this[this.tableMEMBER.SUPERVISORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEMBERAPPROVEDNull() {
                return this.IsNull(this.tableMEMBER.MEMBERAPPROVEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEMBERAPPROVEDNull() {
                this[this.tableMEMBER.MEMBERAPPROVEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPERVISORAPPROVEDNull() {
                return this.IsNull(this.tableMEMBER.SUPERVISORAPPROVEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPERVISORAPPROVEDNull() {
                this[this.tableMEMBER.SUPERVISORAPPROVEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXPERTISENull() {
                return this.IsNull(this.tableMEMBER.EXPERTISEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXPERTISENull() {
                this[this.tableMEMBER.EXPERTISEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow[] GetMEMBERRowsByFK_MEMBER_MEMBER() {
                if ((this.Table.ChildRelations["FK_MEMBER_MEMBER"] == null)) {
                    return new MEMBERRow[0];
                }
                else {
                    return ((MEMBERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MEMBER_MEMBER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow[] GetMEMBERRowsByFK_MEMBER_MEMBER2() {
                if ((this.Table.ChildRelations["FK_MEMBER_MEMBER2"] == null)) {
                    return new MEMBERRow[0];
                }
                else {
                    return ((MEMBERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MEMBER_MEMBER2"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MEMBERRowChangeEvent : global::System.EventArgs {
            
            private MEMBERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRowChangeEvent(MEMBERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEMBERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Types.TypeDataSets.DSMemberTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MEMBERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MEMBERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MEMBER";
            tableMapping.ColumnMappings.Add("RECID", "RECID");
            tableMapping.ColumnMappings.Add("TITLE", "TITLE");
            tableMapping.ColumnMappings.Add("MEMBERSHIPTYPE", "MEMBERSHIPTYPE");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("SURNAME", "SURNAME");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("PASSWORD", "PASSWORD");
            tableMapping.ColumnMappings.Add("COMPANYNAME", "COMPANYNAME");
            tableMapping.ColumnMappings.Add("POSITION", "POSITION");
            tableMapping.ColumnMappings.Add("LOGO", "LOGO");
            tableMapping.ColumnMappings.Add("PICTURE", "PICTURE");
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS");
            tableMapping.ColumnMappings.Add("CITY", "CITY");
            tableMapping.ColumnMappings.Add("PROVINCE", "PROVINCE");
            tableMapping.ColumnMappings.Add("COUNTRY", "COUNTRY");
            tableMapping.ColumnMappings.Add("POSTALCODE", "POSTALCODE");
            tableMapping.ColumnMappings.Add("TELEPHONE", "TELEPHONE");
            tableMapping.ColumnMappings.Add("FAX", "FAX");
            tableMapping.ColumnMappings.Add("MOBILENUMBER", "MOBILENUMBER");
            tableMapping.ColumnMappings.Add("AMOUNTSPERINVESTMENT", "AMOUNTSPERINVESTMENT");
            tableMapping.ColumnMappings.Add("INVESTORTYPE", "INVESTORTYPE");
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY");
            tableMapping.ColumnMappings.Add("CREATIONDATE", "CREATIONDATE");
            tableMapping.ColumnMappings.Add("MODIFICATEDBY", "MODIFICATEDBY");
            tableMapping.ColumnMappings.Add("MODIFICATIONDATE", "MODIFICATIONDATE");
            tableMapping.ColumnMappings.Add("SUPERVISOR", "SUPERVISOR");
            tableMapping.ColumnMappings.Add("MEMBERAPPROVED", "MEMBERAPPROVED");
            tableMapping.ColumnMappings.Add("SUPERVISORAPPROVED", "SUPERVISORAPPROVED");
            tableMapping.ColumnMappings.Add("EXPERTISE", "EXPERTISE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MEMBER] WHERE (([RECID] = @Original_RECID) AND ([TITLE] = @Ori" +
                "ginal_TITLE) AND ([MEMBERSHIPTYPE] = @Original_MEMBERSHIPTYPE) AND ([NAME] = @Or" +
                "iginal_NAME) AND ([SURNAME] = @Original_SURNAME) AND ([EMAIL] = @Original_EMAIL)" +
                " AND ([PASSWORD] = @Original_PASSWORD) AND ((@IsNull_COMPANYNAME = 1 AND [COMPAN" +
                "YNAME] IS NULL) OR ([COMPANYNAME] = @Original_COMPANYNAME)) AND ((@IsNull_POSITI" +
                "ON = 1 AND [POSITION] IS NULL) OR ([POSITION] = @Original_POSITION)) AND ((@IsNu" +
                "ll_ADDRESS = 1 AND [ADDRESS] IS NULL) OR ([ADDRESS] = @Original_ADDRESS)) AND ((" +
                "@IsNull_CITY = 1 AND [CITY] IS NULL) OR ([CITY] = @Original_CITY)) AND ((@IsNull" +
                "_PROVINCE = 1 AND [PROVINCE] IS NULL) OR ([PROVINCE] = @Original_PROVINCE)) AND " +
                "((@IsNull_COUNTRY = 1 AND [COUNTRY] IS NULL) OR ([COUNTRY] = @Original_COUNTRY))" +
                " AND ((@IsNull_POSTALCODE = 1 AND [POSTALCODE] IS NULL) OR ([POSTALCODE] = @Orig" +
                "inal_POSTALCODE)) AND ((@IsNull_TELEPHONE = 1 AND [TELEPHONE] IS NULL) OR ([TELE" +
                "PHONE] = @Original_TELEPHONE)) AND ((@IsNull_FAX = 1 AND [FAX] IS NULL) OR ([FAX" +
                "] = @Original_FAX)) AND ((@IsNull_MOBILENUMBER = 1 AND [MOBILENUMBER] IS NULL) O" +
                "R ([MOBILENUMBER] = @Original_MOBILENUMBER)) AND ((@IsNull_AMOUNTSPERINVESTMENT " +
                "= 1 AND [AMOUNTSPERINVESTMENT] IS NULL) OR ([AMOUNTSPERINVESTMENT] = @Original_A" +
                "MOUNTSPERINVESTMENT)) AND ((@IsNull_INVESTORTYPE = 1 AND [INVESTORTYPE] IS NULL)" +
                " OR ([INVESTORTYPE] = @Original_INVESTORTYPE)) AND ((@IsNull_CREATEDBY = 1 AND [" +
                "CREATEDBY] IS NULL) OR ([CREATEDBY] = @Original_CREATEDBY)) AND ((@IsNull_CREATI" +
                "ONDATE = 1 AND [CREATIONDATE] IS NULL) OR ([CREATIONDATE] = @Original_CREATIONDA" +
                "TE)) AND ((@IsNull_MODIFICATEDBY = 1 AND [MODIFICATEDBY] IS NULL) OR ([MODIFICAT" +
                "EDBY] = @Original_MODIFICATEDBY)) AND ((@IsNull_MODIFICATIONDATE = 1 AND [MODIFI" +
                "CATIONDATE] IS NULL) OR ([MODIFICATIONDATE] = @Original_MODIFICATIONDATE)) AND (" +
                "(@IsNull_SUPERVISOR = 1 AND [SUPERVISOR] IS NULL) OR ([SUPERVISOR] = @Original_S" +
                "UPERVISOR)) AND ((@IsNull_MEMBERAPPROVED = 1 AND [MEMBERAPPROVED] IS NULL) OR ([" +
                "MEMBERAPPROVED] = @Original_MEMBERAPPROVED)) AND ((@IsNull_SUPERVISORAPPROVED = " +
                "1 AND [SUPERVISORAPPROVED] IS NULL) OR ([SUPERVISORAPPROVED] = @Original_SUPERVI" +
                "SORAPPROVED)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMBERSHIPTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERSHIPTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SURNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SURNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PASSWORD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASSWORD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPANYNAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANYNAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANYNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANYNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POSITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADDRESS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CITY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PROVINCE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVINCE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROVINCE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVINCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COUNTRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POSTALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSTALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TELEPHONE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEPHONE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEPHONE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEPHONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FAX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MOBILENUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOBILENUMBER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOBILENUMBER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOBILENUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AMOUNTSPERINVESTMENT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNTSPERINVESTMENT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMOUNTSPERINVESTMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AMOUNTSPERINVESTMENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INVESTORTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVESTORTYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INVESTORTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVESTORTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CREATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CREATIONDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MODIFICATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODIFICATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MODIFICATIONDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATIONDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODIFICATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATIONDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SUPERVISOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUPERVISOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEMBERAPPROVED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERAPPROVED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMBERAPPROVED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERAPPROVED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SUPERVISORAPPROVED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISORAPPROVED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUPERVISORAPPROVED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISORAPPROVED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MEMBER] ([TITLE], [MEMBERSHIPTYPE], [NAME], [SURNAME], [EMAIL], [PASSWORD], [COMPANYNAME], [POSITION], [LOGO], [PICTURE], [ADDRESS], [CITY], [PROVINCE], [COUNTRY], [POSTALCODE], [TELEPHONE], [FAX], [MOBILENUMBER], [AMOUNTSPERINVESTMENT], [INVESTORTYPE], [CREATEDBY], [CREATIONDATE], [MODIFICATEDBY], [MODIFICATIONDATE], [SUPERVISOR], [MEMBERAPPROVED], [SUPERVISORAPPROVED], [EXPERTISE]) VALUES (@TITLE, @MEMBERSHIPTYPE, @NAME, @SURNAME, @EMAIL, @PASSWORD, @COMPANYNAME, @POSITION, @LOGO, @PICTURE, @ADDRESS, @CITY, @PROVINCE, @COUNTRY, @POSTALCODE, @TELEPHONE, @FAX, @MOBILENUMBER, @AMOUNTSPERINVESTMENT, @INVESTORTYPE, @CREATEDBY, @CREATIONDATE, @MODIFICATEDBY, @MODIFICATIONDATE, @SUPERVISOR, @MEMBERAPPROVED, @SUPERVISORAPPROVED, @EXPERTISE);
SELECT RECID, TITLE, MEMBERSHIPTYPE, NAME, SURNAME, EMAIL, PASSWORD, COMPANYNAME, POSITION, LOGO, PICTURE, ADDRESS, CITY, PROVINCE, COUNTRY, POSTALCODE, TELEPHONE, FAX, MOBILENUMBER, AMOUNTSPERINVESTMENT, INVESTORTYPE, CREATEDBY, CREATIONDATE, MODIFICATEDBY, MODIFICATIONDATE, SUPERVISOR, MEMBERAPPROVED, SUPERVISORAPPROVED, EXPERTISE FROM dbo.MEMBER WHERE (RECID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMBERSHIPTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERSHIPTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SURNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SURNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASSWORD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANYNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANYNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGO", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PICTURE", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PICTURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CITY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROVINCE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVINCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSTALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEPHONE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEPHONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOBILENUMBER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOBILENUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNTSPERINVESTMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AMOUNTSPERINVESTMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVESTORTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVESTORTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODIFICATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODIFICATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATIONDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUPERVISOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMBERAPPROVED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERAPPROVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUPERVISORAPPROVED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISORAPPROVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPERTISE", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPERTISE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MEMBER] SET [TITLE] = @TITLE, [MEMBERSHIPTYPE] = @MEMBERSHIPTYPE, [" +
                "NAME] = @NAME, [SURNAME] = @SURNAME, [EMAIL] = @EMAIL, [PASSWORD] = @PASSWORD, [" +
                "COMPANYNAME] = @COMPANYNAME, [POSITION] = @POSITION, [LOGO] = @LOGO, [PICTURE] =" +
                " @PICTURE, [ADDRESS] = @ADDRESS, [CITY] = @CITY, [PROVINCE] = @PROVINCE, [COUNTR" +
                "Y] = @COUNTRY, [POSTALCODE] = @POSTALCODE, [TELEPHONE] = @TELEPHONE, [FAX] = @FA" +
                "X, [MOBILENUMBER] = @MOBILENUMBER, [AMOUNTSPERINVESTMENT] = @AMOUNTSPERINVESTMEN" +
                "T, [INVESTORTYPE] = @INVESTORTYPE, [CREATEDBY] = @CREATEDBY, [CREATIONDATE] = @C" +
                "REATIONDATE, [MODIFICATEDBY] = @MODIFICATEDBY, [MODIFICATIONDATE] = @MODIFICATIO" +
                "NDATE, [SUPERVISOR] = @SUPERVISOR, [MEMBERAPPROVED] = @MEMBERAPPROVED, [SUPERVIS" +
                "ORAPPROVED] = @SUPERVISORAPPROVED, [EXPERTISE] = @EXPERTISE WHERE (([RECID] = @O" +
                "riginal_RECID) AND ([TITLE] = @Original_TITLE) AND ([MEMBERSHIPTYPE] = @Original" +
                "_MEMBERSHIPTYPE) AND ([NAME] = @Original_NAME) AND ([SURNAME] = @Original_SURNAM" +
                "E) AND ([EMAIL] = @Original_EMAIL) AND ([PASSWORD] = @Original_PASSWORD) AND ((@" +
                "IsNull_COMPANYNAME = 1 AND [COMPANYNAME] IS NULL) OR ([COMPANYNAME] = @Original_" +
                "COMPANYNAME)) AND ((@IsNull_POSITION = 1 AND [POSITION] IS NULL) OR ([POSITION] " +
                "= @Original_POSITION)) AND ((@IsNull_ADDRESS = 1 AND [ADDRESS] IS NULL) OR ([ADD" +
                "RESS] = @Original_ADDRESS)) AND ((@IsNull_CITY = 1 AND [CITY] IS NULL) OR ([CITY" +
                "] = @Original_CITY)) AND ((@IsNull_PROVINCE = 1 AND [PROVINCE] IS NULL) OR ([PRO" +
                "VINCE] = @Original_PROVINCE)) AND ((@IsNull_COUNTRY = 1 AND [COUNTRY] IS NULL) O" +
                "R ([COUNTRY] = @Original_COUNTRY)) AND ((@IsNull_POSTALCODE = 1 AND [POSTALCODE]" +
                " IS NULL) OR ([POSTALCODE] = @Original_POSTALCODE)) AND ((@IsNull_TELEPHONE = 1 " +
                "AND [TELEPHONE] IS NULL) OR ([TELEPHONE] = @Original_TELEPHONE)) AND ((@IsNull_F" +
                "AX = 1 AND [FAX] IS NULL) OR ([FAX] = @Original_FAX)) AND ((@IsNull_MOBILENUMBER" +
                " = 1 AND [MOBILENUMBER] IS NULL) OR ([MOBILENUMBER] = @Original_MOBILENUMBER)) A" +
                "ND ((@IsNull_AMOUNTSPERINVESTMENT = 1 AND [AMOUNTSPERINVESTMENT] IS NULL) OR ([A" +
                "MOUNTSPERINVESTMENT] = @Original_AMOUNTSPERINVESTMENT)) AND ((@IsNull_INVESTORTY" +
                "PE = 1 AND [INVESTORTYPE] IS NULL) OR ([INVESTORTYPE] = @Original_INVESTORTYPE))" +
                " AND ((@IsNull_CREATEDBY = 1 AND [CREATEDBY] IS NULL) OR ([CREATEDBY] = @Origina" +
                "l_CREATEDBY)) AND ((@IsNull_CREATIONDATE = 1 AND [CREATIONDATE] IS NULL) OR ([CR" +
                "EATIONDATE] = @Original_CREATIONDATE)) AND ((@IsNull_MODIFICATEDBY = 1 AND [MODI" +
                "FICATEDBY] IS NULL) OR ([MODIFICATEDBY] = @Original_MODIFICATEDBY)) AND ((@IsNul" +
                "l_MODIFICATIONDATE = 1 AND [MODIFICATIONDATE] IS NULL) OR ([MODIFICATIONDATE] = " +
                "@Original_MODIFICATIONDATE)) AND ((@IsNull_SUPERVISOR = 1 AND [SUPERVISOR] IS NU" +
                "LL) OR ([SUPERVISOR] = @Original_SUPERVISOR)) AND ((@IsNull_MEMBERAPPROVED = 1 A" +
                "ND [MEMBERAPPROVED] IS NULL) OR ([MEMBERAPPROVED] = @Original_MEMBERAPPROVED)) A" +
                "ND ((@IsNull_SUPERVISORAPPROVED = 1 AND [SUPERVISORAPPROVED] IS NULL) OR ([SUPER" +
                "VISORAPPROVED] = @Original_SUPERVISORAPPROVED)));\r\nSELECT RECID, TITLE, MEMBERSH" +
                "IPTYPE, NAME, SURNAME, EMAIL, PASSWORD, COMPANYNAME, POSITION, LOGO, PICTURE, AD" +
                "DRESS, CITY, PROVINCE, COUNTRY, POSTALCODE, TELEPHONE, FAX, MOBILENUMBER, AMOUNT" +
                "SPERINVESTMENT, INVESTORTYPE, CREATEDBY, CREATIONDATE, MODIFICATEDBY, MODIFICATI" +
                "ONDATE, SUPERVISOR, MEMBERAPPROVED, SUPERVISORAPPROVED, EXPERTISE FROM dbo.MEMBE" +
                "R WHERE (RECID = @RECID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMBERSHIPTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERSHIPTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SURNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SURNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASSWORD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANYNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANYNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGO", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PICTURE", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PICTURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CITY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROVINCE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVINCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSTALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEPHONE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEPHONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOBILENUMBER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOBILENUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNTSPERINVESTMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AMOUNTSPERINVESTMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVESTORTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVESTORTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODIFICATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODIFICATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATIONDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUPERVISOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMBERAPPROVED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERAPPROVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUPERVISORAPPROVED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISORAPPROVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPERTISE", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPERTISE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMBERSHIPTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERSHIPTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SURNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SURNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PASSWORD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASSWORD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPANYNAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANYNAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANYNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANYNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POSITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADDRESS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CITY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PROVINCE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVINCE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROVINCE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVINCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COUNTRY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POSTALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSTALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TELEPHONE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEPHONE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEPHONE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEPHONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FAX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MOBILENUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOBILENUMBER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOBILENUMBER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOBILENUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AMOUNTSPERINVESTMENT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNTSPERINVESTMENT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMOUNTSPERINVESTMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AMOUNTSPERINVESTMENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INVESTORTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVESTORTYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INVESTORTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVESTORTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CREATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CREATIONDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MODIFICATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODIFICATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MODIFICATIONDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATIONDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODIFICATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFICATIONDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SUPERVISOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUPERVISOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEMBERAPPROVED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERAPPROVED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMBERAPPROVED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBERAPPROVED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SUPERVISORAPPROVED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISORAPPROVED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUPERVISORAPPROVED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUPERVISORAPPROVED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RECID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Types.Properties.Settings.Default.MersinBANConnectionString3;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT RECID, TITLE, MEMBERSHIPTYPE, NAME, SURNAME, EMAIL, PASSWORD, COMPANYNAME, POSITION, LOGO, PICTURE, ADDRESS, CITY, PROVINCE, COUNTRY, POSTALCODE, TELEPHONE, FAX, MOBILENUMBER, AMOUNTSPERINVESTMENT, INVESTORTYPE, CREATEDBY, CREATIONDATE, MODIFICATEDBY, MODIFICATIONDATE, SUPERVISOR, MEMBERAPPROVED, SUPERVISORAPPROVED, EXPERTISE FROM dbo.MEMBER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSMember.MEMBERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSMember.MEMBERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSMember.MEMBERDataTable dataTable = new DSMember.MEMBERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSMember.MEMBERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSMember dataSet) {
            return this.Adapter.Update(dataSet, "MEMBER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_RECID, 
                    int Original_TITLE, 
                    int Original_MEMBERSHIPTYPE, 
                    string Original_NAME, 
                    string Original_SURNAME, 
                    string Original_EMAIL, 
                    string Original_PASSWORD, 
                    string Original_COMPANYNAME, 
                    string Original_POSITION, 
                    string Original_ADDRESS, 
                    string Original_CITY, 
                    string Original_PROVINCE, 
                    string Original_COUNTRY, 
                    string Original_POSTALCODE, 
                    string Original_TELEPHONE, 
                    string Original_FAX, 
                    string Original_MOBILENUMBER, 
                    global::System.Nullable<decimal> Original_AMOUNTSPERINVESTMENT, 
                    global::System.Nullable<int> Original_INVESTORTYPE, 
                    global::System.Nullable<int> Original_CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> Original_CREATIONDATE, 
                    global::System.Nullable<int> Original_MODIFICATEDBY, 
                    global::System.Nullable<global::System.DateTime> Original_MODIFICATIONDATE, 
                    global::System.Nullable<int> Original_SUPERVISOR, 
                    global::System.Nullable<bool> Original_MEMBERAPPROVED, 
                    global::System.Nullable<bool> Original_SUPERVISORAPPROVED) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RECID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_TITLE));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MEMBERSHIPTYPE));
            if ((Original_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_NAME));
            }
            if ((Original_SURNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SURNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SURNAME));
            }
            if ((Original_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_EMAIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_EMAIL));
            }
            if ((Original_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_PASSWORD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PASSWORD));
            }
            if ((Original_COMPANYNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_COMPANYNAME));
            }
            if ((Original_POSITION == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_POSITION));
            }
            if ((Original_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ADDRESS));
            }
            if ((Original_CITY == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_CITY));
            }
            if ((Original_PROVINCE == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PROVINCE));
            }
            if ((Original_COUNTRY == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_COUNTRY));
            }
            if ((Original_POSTALCODE == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_POSTALCODE));
            }
            if ((Original_TELEPHONE == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_TELEPHONE));
            }
            if ((Original_FAX == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_FAX));
            }
            if ((Original_MOBILENUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_MOBILENUMBER));
            }
            if ((Original_AMOUNTSPERINVESTMENT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_AMOUNTSPERINVESTMENT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_INVESTORTYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_INVESTORTYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATEDBY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_CREATEDBY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATIONDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_CREATIONDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_MODIFICATEDBY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_MODIFICATEDBY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_MODIFICATIONDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_MODIFICATIONDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_SUPERVISOR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_SUPERVISOR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_MEMBERAPPROVED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_MEMBERAPPROVED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_SUPERVISORAPPROVED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_SUPERVISORAPPROVED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int TITLE, 
                    int MEMBERSHIPTYPE, 
                    string NAME, 
                    string SURNAME, 
                    string EMAIL, 
                    string PASSWORD, 
                    string COMPANYNAME, 
                    string POSITION, 
                    byte[] LOGO, 
                    byte[] PICTURE, 
                    string ADDRESS, 
                    string CITY, 
                    string PROVINCE, 
                    string COUNTRY, 
                    string POSTALCODE, 
                    string TELEPHONE, 
                    string FAX, 
                    string MOBILENUMBER, 
                    global::System.Nullable<decimal> AMOUNTSPERINVESTMENT, 
                    global::System.Nullable<int> INVESTORTYPE, 
                    global::System.Nullable<int> CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> CREATIONDATE, 
                    global::System.Nullable<int> MODIFICATEDBY, 
                    global::System.Nullable<global::System.DateTime> MODIFICATIONDATE, 
                    global::System.Nullable<int> SUPERVISOR, 
                    global::System.Nullable<bool> MEMBERAPPROVED, 
                    global::System.Nullable<bool> SUPERVISORAPPROVED, 
                    string EXPERTISE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(TITLE));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MEMBERSHIPTYPE));
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NAME));
            }
            if ((SURNAME == null)) {
                throw new global::System.ArgumentNullException("SURNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SURNAME));
            }
            if ((EMAIL == null)) {
                throw new global::System.ArgumentNullException("EMAIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EMAIL));
            }
            if ((PASSWORD == null)) {
                throw new global::System.ArgumentNullException("PASSWORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PASSWORD));
            }
            if ((COMPANYNAME == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(COMPANYNAME));
            }
            if ((POSITION == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(POSITION));
            }
            if ((LOGO == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte[])(LOGO));
            }
            if ((PICTURE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(PICTURE));
            }
            if ((ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ADDRESS));
            }
            if ((CITY == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CITY));
            }
            if ((PROVINCE == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PROVINCE));
            }
            if ((COUNTRY == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(COUNTRY));
            }
            if ((POSTALCODE == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(POSTALCODE));
            }
            if ((TELEPHONE == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(TELEPHONE));
            }
            if ((FAX == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(FAX));
            }
            if ((MOBILENUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(MOBILENUMBER));
            }
            if ((AMOUNTSPERINVESTMENT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(AMOUNTSPERINVESTMENT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((INVESTORTYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(INVESTORTYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((CREATEDBY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(CREATEDBY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((CREATIONDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(CREATIONDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((MODIFICATEDBY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(MODIFICATEDBY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((MODIFICATIONDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(MODIFICATIONDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((SUPERVISOR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(SUPERVISOR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((MEMBERAPPROVED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(MEMBERAPPROVED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SUPERVISORAPPROVED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(SUPERVISORAPPROVED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((EXPERTISE == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(EXPERTISE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int TITLE, 
                    int MEMBERSHIPTYPE, 
                    string NAME, 
                    string SURNAME, 
                    string EMAIL, 
                    string PASSWORD, 
                    string COMPANYNAME, 
                    string POSITION, 
                    byte[] LOGO, 
                    byte[] PICTURE, 
                    string ADDRESS, 
                    string CITY, 
                    string PROVINCE, 
                    string COUNTRY, 
                    string POSTALCODE, 
                    string TELEPHONE, 
                    string FAX, 
                    string MOBILENUMBER, 
                    global::System.Nullable<decimal> AMOUNTSPERINVESTMENT, 
                    global::System.Nullable<int> INVESTORTYPE, 
                    global::System.Nullable<int> CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> CREATIONDATE, 
                    global::System.Nullable<int> MODIFICATEDBY, 
                    global::System.Nullable<global::System.DateTime> MODIFICATIONDATE, 
                    global::System.Nullable<int> SUPERVISOR, 
                    global::System.Nullable<bool> MEMBERAPPROVED, 
                    global::System.Nullable<bool> SUPERVISORAPPROVED, 
                    string EXPERTISE, 
                    int Original_RECID, 
                    int Original_TITLE, 
                    int Original_MEMBERSHIPTYPE, 
                    string Original_NAME, 
                    string Original_SURNAME, 
                    string Original_EMAIL, 
                    string Original_PASSWORD, 
                    string Original_COMPANYNAME, 
                    string Original_POSITION, 
                    string Original_ADDRESS, 
                    string Original_CITY, 
                    string Original_PROVINCE, 
                    string Original_COUNTRY, 
                    string Original_POSTALCODE, 
                    string Original_TELEPHONE, 
                    string Original_FAX, 
                    string Original_MOBILENUMBER, 
                    global::System.Nullable<decimal> Original_AMOUNTSPERINVESTMENT, 
                    global::System.Nullable<int> Original_INVESTORTYPE, 
                    global::System.Nullable<int> Original_CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> Original_CREATIONDATE, 
                    global::System.Nullable<int> Original_MODIFICATEDBY, 
                    global::System.Nullable<global::System.DateTime> Original_MODIFICATIONDATE, 
                    global::System.Nullable<int> Original_SUPERVISOR, 
                    global::System.Nullable<bool> Original_MEMBERAPPROVED, 
                    global::System.Nullable<bool> Original_SUPERVISORAPPROVED, 
                    int RECID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(TITLE));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(MEMBERSHIPTYPE));
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NAME));
            }
            if ((SURNAME == null)) {
                throw new global::System.ArgumentNullException("SURNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SURNAME));
            }
            if ((EMAIL == null)) {
                throw new global::System.ArgumentNullException("EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(EMAIL));
            }
            if ((PASSWORD == null)) {
                throw new global::System.ArgumentNullException("PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PASSWORD));
            }
            if ((COMPANYNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(COMPANYNAME));
            }
            if ((POSITION == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(POSITION));
            }
            if ((LOGO == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte[])(LOGO));
            }
            if ((PICTURE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(PICTURE));
            }
            if ((ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ADDRESS));
            }
            if ((CITY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CITY));
            }
            if ((PROVINCE == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PROVINCE));
            }
            if ((COUNTRY == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(COUNTRY));
            }
            if ((POSTALCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(POSTALCODE));
            }
            if ((TELEPHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(TELEPHONE));
            }
            if ((FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(FAX));
            }
            if ((MOBILENUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(MOBILENUMBER));
            }
            if ((AMOUNTSPERINVESTMENT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(AMOUNTSPERINVESTMENT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((INVESTORTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(INVESTORTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((CREATEDBY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(CREATEDBY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((CREATIONDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(CREATIONDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((MODIFICATEDBY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(MODIFICATEDBY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((MODIFICATIONDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(MODIFICATIONDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((SUPERVISOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(SUPERVISOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((MEMBERAPPROVED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(MEMBERAPPROVED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SUPERVISORAPPROVED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(SUPERVISORAPPROVED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((EXPERTISE == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(EXPERTISE));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_RECID));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_TITLE));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_MEMBERSHIPTYPE));
            if ((Original_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_NAME));
            }
            if ((Original_SURNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SURNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_SURNAME));
            }
            if ((Original_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_EMAIL));
            }
            if ((Original_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_PASSWORD));
            }
            if ((Original_COMPANYNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_COMPANYNAME));
            }
            if ((Original_POSITION == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_POSITION));
            }
            if ((Original_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_ADDRESS));
            }
            if ((Original_CITY == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_CITY));
            }
            if ((Original_PROVINCE == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_PROVINCE));
            }
            if ((Original_COUNTRY == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_COUNTRY));
            }
            if ((Original_POSTALCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_POSTALCODE));
            }
            if ((Original_TELEPHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_TELEPHONE));
            }
            if ((Original_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_FAX));
            }
            if ((Original_MOBILENUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_MOBILENUMBER));
            }
            if ((Original_AMOUNTSPERINVESTMENT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(Original_AMOUNTSPERINVESTMENT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_INVESTORTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_INVESTORTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATEDBY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_CREATEDBY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATIONDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(Original_CREATIONDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_MODIFICATEDBY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_MODIFICATEDBY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_MODIFICATIONDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(Original_MODIFICATIONDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_SUPERVISOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_SUPERVISOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_MEMBERAPPROVED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(Original_MEMBERAPPROVED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_SUPERVISORAPPROVED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Original_SUPERVISORAPPROVED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(RECID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int TITLE, 
                    int MEMBERSHIPTYPE, 
                    string NAME, 
                    string SURNAME, 
                    string EMAIL, 
                    string PASSWORD, 
                    string COMPANYNAME, 
                    string POSITION, 
                    byte[] LOGO, 
                    byte[] PICTURE, 
                    string ADDRESS, 
                    string CITY, 
                    string PROVINCE, 
                    string COUNTRY, 
                    string POSTALCODE, 
                    string TELEPHONE, 
                    string FAX, 
                    string MOBILENUMBER, 
                    global::System.Nullable<decimal> AMOUNTSPERINVESTMENT, 
                    global::System.Nullable<int> INVESTORTYPE, 
                    global::System.Nullable<int> CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> CREATIONDATE, 
                    global::System.Nullable<int> MODIFICATEDBY, 
                    global::System.Nullable<global::System.DateTime> MODIFICATIONDATE, 
                    global::System.Nullable<int> SUPERVISOR, 
                    global::System.Nullable<bool> MEMBERAPPROVED, 
                    global::System.Nullable<bool> SUPERVISORAPPROVED, 
                    string EXPERTISE, 
                    int Original_RECID, 
                    int Original_TITLE, 
                    int Original_MEMBERSHIPTYPE, 
                    string Original_NAME, 
                    string Original_SURNAME, 
                    string Original_EMAIL, 
                    string Original_PASSWORD, 
                    string Original_COMPANYNAME, 
                    string Original_POSITION, 
                    string Original_ADDRESS, 
                    string Original_CITY, 
                    string Original_PROVINCE, 
                    string Original_COUNTRY, 
                    string Original_POSTALCODE, 
                    string Original_TELEPHONE, 
                    string Original_FAX, 
                    string Original_MOBILENUMBER, 
                    global::System.Nullable<decimal> Original_AMOUNTSPERINVESTMENT, 
                    global::System.Nullable<int> Original_INVESTORTYPE, 
                    global::System.Nullable<int> Original_CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> Original_CREATIONDATE, 
                    global::System.Nullable<int> Original_MODIFICATEDBY, 
                    global::System.Nullable<global::System.DateTime> Original_MODIFICATIONDATE, 
                    global::System.Nullable<int> Original_SUPERVISOR, 
                    global::System.Nullable<bool> Original_MEMBERAPPROVED, 
                    global::System.Nullable<bool> Original_SUPERVISORAPPROVED) {
            return this.Update(TITLE, MEMBERSHIPTYPE, NAME, SURNAME, EMAIL, PASSWORD, COMPANYNAME, POSITION, LOGO, PICTURE, ADDRESS, CITY, PROVINCE, COUNTRY, POSTALCODE, TELEPHONE, FAX, MOBILENUMBER, AMOUNTSPERINVESTMENT, INVESTORTYPE, CREATEDBY, CREATIONDATE, MODIFICATEDBY, MODIFICATIONDATE, SUPERVISOR, MEMBERAPPROVED, SUPERVISORAPPROVED, EXPERTISE, Original_RECID, Original_TITLE, Original_MEMBERSHIPTYPE, Original_NAME, Original_SURNAME, Original_EMAIL, Original_PASSWORD, Original_COMPANYNAME, Original_POSITION, Original_ADDRESS, Original_CITY, Original_PROVINCE, Original_COUNTRY, Original_POSTALCODE, Original_TELEPHONE, Original_FAX, Original_MOBILENUMBER, Original_AMOUNTSPERINVESTMENT, Original_INVESTORTYPE, Original_CREATEDBY, Original_CREATIONDATE, Original_MODIFICATEDBY, Original_MODIFICATIONDATE, Original_SUPERVISOR, Original_MEMBERAPPROVED, Original_SUPERVISORAPPROVED, Original_RECID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MEMBERTableAdapter _mEMBERTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MEMBERTableAdapter MEMBERTableAdapter {
            get {
                return this._mEMBERTableAdapter;
            }
            set {
                this._mEMBERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._mEMBERTableAdapter != null) 
                            && (this._mEMBERTableAdapter.Connection != null))) {
                    return this._mEMBERTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._mEMBERTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DSMember dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mEMBERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MEMBER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_MEMBER_MEMBER"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_MEMBER_MEMBER2"], false);
                    result = (result + this._mEMBERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DSMember dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mEMBERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MEMBER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_MEMBER_MEMBER"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_MEMBER_MEMBER2"], false);
                    result = (result + this._mEMBERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DSMember dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mEMBERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MEMBER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_MEMBER_MEMBER"], true);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_MEMBER_MEMBER2"], true);
                    result = (result + this._mEMBERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DSMember dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._mEMBERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mEMBERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._mEMBERTableAdapter != null)) {
                    revertConnections.Add(this._mEMBERTableAdapter, this._mEMBERTableAdapter.Connection);
                    this._mEMBERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mEMBERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mEMBERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mEMBERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mEMBERTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._mEMBERTableAdapter != null)) {
                    this._mEMBERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mEMBERTableAdapter]));
                    this._mEMBERTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591